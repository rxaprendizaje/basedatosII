CREATE OR REPLACE PACKAGE BODY GESTIONDEPARTAMENTOS AS
		--######################## FUNCIONES DE VALIDACIÓN
		FUNCTION F_VALIDAREXISTE(IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE) RETURN BOOLEAN
		IS
			EXISTE_ INT := 0;
		BEGIN
			SELECT COUNT(*) INTO EXISTE_ FROM TBLDEPARTAMENTOS WHERE IDDEPARTAMENTO = IDDEPARTAMENTO_;
			IF EXISTE_ > 0 THEN
				RETURN TRUE;
			ELSE
				RETURN FALSE;
			END IF;
		END;

    FUNCTION F_VALIDARNULOS(IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE) RETURN BOOLEAN
		IS
			VALIDO_ BOOLEAN := FALSE;
		BEGIN
			IF IDDEPARTAMENTO_ IS NOT NULL THEN
				VALIDO_ := TRUE;
			END IF;
			RETURN VALIDO_;
		END;

		--######################## PROCEDIMIENTOS DE MANTENIMIENTO
		PROCEDURE P_GESTIONDEPARTAMENTO(
																	IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE
																	,NOMBREDEPARTAMENTO_ TBLDEPARTAMENTOS.NOMBREDEPARTAMENTO%TYPE
																	,IDPAIS_ TBLDEPARTAMENTOS.IDPAIS%TYPE
		)
		IS
		BEGIN
			--VALIDAR NULOS
			IF NOT F_VALIDARNULOS(IDDEPARTAMENTO_) THEN
				RAISE REGISTRO_INVALIDO;
			END IF;
			--VALIDAR EXISTE
			IF F_VALIDAREXISTE(IDDEPARTAMENTO_) THEN
				P_CREADEPARTAMENTO(IDDEPARTAMENTO_, NOMBREDEPARTAMENTO_, IDPAIS_);
				COMMIT;
				ELSE
				P_MODIFICADEPARTAMENTO(IDDEPARTAMENTO_, NOMBREDEPARTAMENTO_, IDPAIS_);
				COMMIT;
			END IF;
			DBMS_OUTPUT.PUT_LINE('FINALIZADA LA ACTUALIZACIÓN CON ÉXITO PARA EL DEPARTAMENTO: ' || NOMBREDEPARTAMENTO_);

			--DML
			EXCEPTION
			WHEN	REGISTRO_INVALIDO THEN
				RAISE_APPLICATION_ERROR(20001,'EL REGISTRO CONTIENE CARACTERES NULOS EN CAMPOS QUE NO LO PERMITEN, VERIFIQUE... (' || SQLCODE || ' - '|| SQLERRM() || ')');
			WHEN OTHERS THEN
				RAISE_APPLICATION_ERROR(SQLCODE, SQLERRM());
		END;

    PROCEDURE P_CREADEPARTAMENTO(
																	IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE
																	,NOMBREDEPARTAMENTO_ TBLDEPARTAMENTOS.NOMBREDEPARTAMENTO%TYPE
																	,IDPAIS_ TBLDEPARTAMENTOS.IDPAIS%TYPE
		)
		IS
		BEGIN
			DBMS_OUTPUT.PUT_LINE('INSERTANDO REGISTRO...');
			INSERT INTO TBLDEPARTAMENTOS (IDDEPARTAMENTO, NOMBREDEPARTAMENTO, IDPAIS)
			VALUES (IDDEPARTAMENTO_
							,NOMBREDEPARTAMENTO_
							,IDPAIS_);
		END;

    PROCEDURE P_MODIFICADEPARTAMENTO(
																			IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE
																			,NOMBREDEPARTAMENTO_ TBLDEPARTAMENTOS.NOMBREDEPARTAMENTO%TYPE
																			,IDPAIS_ TBLDEPARTAMENTOS.IDPAIS%TYPE)
		IS
		BEGIN
			DBMS_OUTPUT.PUT_LINE('MODIFICANDO REGISTRO...');
			UPDATE TBLDEPARTAMENTOS SET
					NOMBREDEPARTAMENTO = NOMBREDEPARTAMENTO_
					, IDPAIS = IDPAIS_
			WHERE IDDEPARTAMENTO = IDDEPARTAMENTO_;
		END;

    PROCEDURE P_ELIMINADEPARTAMENTO(IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE)
		IS
		BEGIN
			IF F_VALIDARNULOS(IDDEPARTAMENTO_) THEN
				DBMS_OUTPUT.PUT_LINE('ELIMINANDO REGISTRO...');
				DELETE FROM TBLDEPARTAMENTOS WHERE IDDEPARTAMENTO = IDDEPARTAMENTO_;
				COMMIT;
			ELSE
				RAISE REGISTRO_INVALIDO;
			END IF;
		END;

		--######################## FUNCIONES DE VISUALIZACIÓN
    FUNCTION F_SELECCIONADEPARTAMENTOS RETURN SYS_REFCURSOR
		IS
			CUR_ SYS_REFCURSOR;
		BEGIN
			OPEN CUR_ FOR SELECT IDDEPARTAMENTO, NOMBREDEPARTAMENTO, IDPAIS FROM TBLDEPARTAMENTOS;

		END;


		FUNCTION F_BUSCADEPARTAMENTO(IDDEPARTAMENTO_ TBLDEPARTAMENTOS.IDDEPARTAMENTO%TYPE) RETURN SYS_REFCURSOR
		IS
			CUR_ SYS_REFCURSOR;
		BEGIN
			OPEN CUR_ FOR SELECT IDDEPARTAMENTO, NOMBREDEPARTAMENTO, IDPAIS FROM TBLDEPARTAMENTOS WHERE IDDEPARTAMENTO = IDDEPARTAMENTO_;
		END;

    FUNCTION F_BUSCADEPARTAMENTO(NOMBREDEPARTAMENTO_ TBLDEPARTAMENTOS.NOMBREDEPARTAMENTO%TYPE) RETURN SYS_REFCURSOR
		IS
			CUR_ SYS_REFCURSOR;
		BEGIN
			OPEN CUR_ FOR SELECT IDDEPARTAMENTO, NOMBREDEPARTAMENTO, IDPAIS FROM TBLDEPARTAMENTOS WHERE NOMBREDEPARTAMENTO = NOMBREDEPARTAMENTO_;
		END;

END GESTIONDEPARTAMENTOS;
